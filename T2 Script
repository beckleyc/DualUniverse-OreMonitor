local smallVolume = 10400
local mediumVolume = 83200
local largeVolume = 166400

function round(number,decimals)
    local power = 10^decimals
    return math.floor((number/1000) * power) / power
end 

function oreStatus(percent)
    if percent <= 25 then return "<th style=\"color: red;\">LOW</th>"
    elseif percent > 25 and percent < 50 then return "<th style=\"color: orange;\">LOW</th>"
    else return "<th style=\"color: green;\">GOOD</th>"
    end 
end

function getContainerVolume(size)
    if size == "S" or size == "s" then return smallVolume
    	elseif size == "M" or size == "m" then return mediumVolume
    	elseif size == "L" or size == "l" then return largeVolume
    	else return mediumVolume
    end
end

local useL = 1 --export: Use 1 for L or 0 for t
if useL == 1 then
    unitMeasure = "KL"
elseif useL == 0 then
    unitMeasure = "T"
end

-- Chromite Variables 
local chromiteContainerSize = "M" --export: Size of the container (S, M, L)
local maxChromite = getContainerVolume(chromiteContainerSize)
local weightChromite = 4.54 --export:
if useL == 1 then
    massChromite = round(math.ceil(chromite.getItemsMass()/weightChromite),1)
elseif useL == 0 then
    massChromite = round(math.ceil(chromite.getItemsMass()),1)
end
local percentChromite = math.ceil(((math.ceil((chromite.getItemsMass()/weightChromite) - 0.5)/maxChromite)*100))
local statusChromite = oreStatus(percentChromite)

    
-- Limestone Variables
local limestoneContainerSize = "M" --export: Size of the container (S, M, L)
local maxLimestone = getContainerVolume(limestoneContainerSize)
local weightLimestone = 2.71 --export:
if useL == 1 then
    massLimestone = round(math.ceil(limestone.getItemsMass()/weightLimestone),1)
elseif useL == 0 then
    massLimestone = round(math.ceil(limestone.getItemsMass()),1)
end
local percentLimestone = math.ceil(((math.ceil((limestone.getItemsMass()/weightLimestone) - 0.5)/maxLimestone)*100))
local statusLimestone = oreStatus(percentLimestone)

-- Malachite Variables
local malachiteContainerSize = "M" --export: Size of the container (S, M, L)
local maxMalachite = getContainerVolume(malachiteContainerSize)
local weightMalachite = 4.00 --export:
if useL == 1 then
    massMalachite = round(math.ceil(malachite.getItemsMass()/weightMalachite),1)
elseif useL == 0 then
    massMalachite = round(math.ceil(malachite.getItemsMass()),1)
end
local percentMalachite = math.ceil(((math.ceil((malachite.getItemsMass()/weightMalachite) - 0.5)/maxMalachite)*100))
local statusMalachite = oreStatus(percentMalachite)

-- Natron Variables
local natronContainerSize = "M" --export: Size of the container (S, M, L)
local maxNatron = getContainerVolume(natronContainerSize)
local weightNatron = 1.55 --export:
if useL == 1 then
    massNatron = round(math.ceil(natron.getItemsMass()/weightNatron),1)
elseif useL == 0 then
    massNatron = round(math.ceil(natron.getItemsMass()),1)
end
local percentNatron = math.ceil(((math.ceil((natron.getItemsMass()/weightNatron) - 0.5)/maxNatron)*100))
local statusNatron = oreStatus(percentNatron)


html = [[
<div class="bootstrap">
<h1 style="
	font-size: 8em;
">T2 Ore Status</h1>
<table 
style="
	margin-top: 10px;
	margin-left: auto;
	margin-right: auto;
	width: 80%;
	font-size: 4em;
">
	</br>
	<tr style="
		width: 100%;
		margin-bottom: 30px;
		background-color: blue;
		color: white;
	">
		<th>Ore</th>
		<th>Qty</th>
		<th>Levels</th>
		<th>Status</th>
	<tr>
		<th>Chromite</th>
		<th>]]..massChromite..unitMeasure..[[</th>
		<th>]]..percentChromite..[[%</th>
		]]..statusChromite..[[
	</tr>
	<tr>
		<th>Limestone</th>
		<th>]]..massLimestone..unitMeasure..[[</th>
		<th>]]..percentLimestone..[[%</th>
		]]..statusLimestone..[[
	</tr>
	<tr>
		<th>Malachite</th>
		<th>]]..massMalachite..unitMeasure..[[</th>
		<th>]]..percentMalachite..[[%</th>
		]]..statusMalachite..[[
	</tr>
	<tr>
		<th>Natron</th>
		<th>]]..massNatron..unitMeasure..[[</th>
		<th>]]..percentNatron..[[%</th>
		]]..statusNatron..[[
	</tr>

</table>
</div>
]]

screen.setHTML(html)
